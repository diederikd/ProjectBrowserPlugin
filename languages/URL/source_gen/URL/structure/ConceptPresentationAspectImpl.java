package URL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BWBNummer = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Context = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCKey = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCKeyValuePaar = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCTypeC = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCTypeV = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_JCValue = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Link = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_URL = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BWBNummer:
        return props_BWBNummer;
      case LanguageConceptSwitch.Context:
        return props_Context;
      case LanguageConceptSwitch.JCKey:
        return props_JCKey;
      case LanguageConceptSwitch.JCKeyValuePaar:
        return props_JCKeyValuePaar;
      case LanguageConceptSwitch.JCType:
        return props_JCType;
      case LanguageConceptSwitch.JCTypeC:
        return props_JCTypeC;
      case LanguageConceptSwitch.JCTypeV:
        return props_JCTypeV;
      case LanguageConceptSwitch.JCValue:
        return props_JCValue;
      case LanguageConceptSwitch.Link:
        return props_Link;
      case LanguageConceptSwitch.URL:
        return props_URL;
    }
    return null;
  }
}
